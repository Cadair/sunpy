name: $(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.rr)
variables:
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_MANYLINUX_I686_IMAGE: manylinux2014
  JSOC_EMAIL: "jsoc@cadair.com"  # For the example gallery on the dev deps build

schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
      - main
      - 3.0
    always: true

resources:
  repositories:
  - repository: OpenAstronomy
    type: github
    endpoint: sunpy
    name: OpenAstronomy/azure-pipelines-templates
    ref: master

trigger:
  branches:
    include:
    - '*'
    exclude:
    - '*backport*'
  tags:
    include:
    - 'v*'
    exclude:
    - '*dev*'
    - '*pre*'
    - '*post*'

pr:
  autoCancel: true

stages:
  - stage: FirstPhaseTests
    displayName: Core Tests
    jobs:
      - job: pass
        steps:
          - script: exit 0
    # - template: run-tox-env.yml@OpenAstronomy
    #   parameters:
    #     default_python: '3.8'
    #     submodules: false
    #     coverage: codecov
    #     toxdeps: tox-pypi-filter
    #     posargs: -n=4

    #     libraries:
    #       apt:
    #         - libopenjp2-7

    #     envs:
    #       - linux: py39

  - stage: SecondPhaseTests
    displayName: Stage 2 Tests
    dependsOn: FirstPhaseTests
    jobs:
      - job: pass
        steps:
          - script: exit 0
    # - template: run-tox-env.yml@OpenAstronomy
    #   parameters:
    #     default_python: '3.8'
    #     submodules: false
    #     coverage: codecov
    #     toxdeps: tox-pypi-filter
    #     posargs: -n=4

    #     libraries:
    #       apt:
    #         - libopenjp2-7
    #         - graphviz
    #       brew:
    #         - openjpeg

    #     envs:
    #       - macos: py37
    #       #- windows: py38
    #       #- linux: py37-oldestdeps
    #       #- linux: py38-conda
    #       #  libraries: {}

  - stage: SecondPhaseTestsAllowedFail
    displayName: Stage 2 Tests (Allowed Fail)
    dependsOn: FirstPhaseTests
    jobs:
      - job: fail
        steps:
          - script: exit 1
    #- template: run-tox-env.yml@OpenAstronomy
    #  parameters:
    #    default_python: '3.8'
    #    submodules: false
    #    coverage: codecov
    #    toxdeps: tox-pypi-filter
    #    posargs: -n=4

    #    libraries:
    #      apt:
    #        - libopenjp2-7
    #        - graphviz
    #      brew:
    #        - openjpeg

    #    envs:
    #      - linux: build_docs
    #        name: build_docs
    #        posargs: " "
    #        pytest: false
    #      - linux: py38-online
    #        name: py38_online


  - ${{ if or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual')) }}:
    - stage: CronTests
      displayName: Cron Tests
      dependsOn: []  # Don't wait on other stages
      jobs:
      - template: run-tox-env.yml@OpenAstronomy
        parameters:
          default_python: '3.8'
          submodules: false
          coverage: codecov
          toxdeps: tox-pypi-filter
          posargs: -n=4

          libraries:
            apt:
              - libopenjp2-7
              - graphviz
            yum:
              - openssl-devel
              - freetype-devel
              - libpng-devel
              - hdf5-devel

          envs:
            #- linux: py38-hypothesis
            #- linux: py38-devdeps
            - linux: base_deps

  # On branches which aren't main, and not Pull Requests, build the wheels but only upload them on tags
  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), or(ne(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual'))) }}:
    # If we are building a tag, then stop here and make a human check that the
    # any allowed fails are ok to continue the release.
    # Ideally this would happen right before the publish step, but I can't work
    # out how to make that happen.
    #- ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
    - stage: ApprovalOfReleaseWithFailingTests
      displayName: Approve Release
      dependsOn: SecondPhaseTestsAllowedFail
      condition: always()
      jobs:
      - job: waitForValidation
        displayName: Approve release with failing tests
        condition: in(dependencies.SecondPhaseTestsAllowedFail.result, 'Skipped', 'Failed', 'Canceled')
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 1440 # task times out in 1 day
          inputs:
            instructions: |
              Please check that the fails in these jobs are the result of online server failures
              and that the release can be published despite them.
            onTimeout: 'reject'

    - stage: Release
      dependsOn:
        - SecondPhaseTests
        #- ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
        - ApprovalOfReleaseWithFailingTests
      jobs:
      - template: publish.yml@OpenAstronomy
        parameters:
          # Only Upload to PyPI on tags
          ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
            pypi_connection_name : 'PyPI'
          test_extras: 'dev'
          test_command: 'pytest -p no:warnings --doctest-rst -m "not mpl_image_compare" --pyargs sunpy'
          submodules: false
          targets:
            - wheels_cp3[789]-manylinux*x86_64
            - wheels_cp3[789]-macosx*
            - sdist

  - ${{ if or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual')) }}:
    - stage: CronNotifier_OK
      condition: succeeded()
      dependsOn:
        - SecondPhaseTestsAllowedFail
        - SecondPhaseTests
        - CronTests
        - Release
      jobs:
      - job: notify
        pool:
          vmImage: ubuntu-20.04
        steps:
        - bash: |
            sudo apt-get install httpie xonsh
            http --version
        - bash: xonsh ./tools/send_matrix_message.xsh
          env:
            ROOMID: '%21JYqfIVJjWANcHnfktY:cadair.com'  # sunpy development room
            HOMESERVER: 'https://matrix.cadair.com'
            BRANCH: $(Build.SourceBranchName)
            ACCESS_TOKEN: $(azurebot_access_token)
            BUILDID: $(Build.BuildId)
            STATUS: Succeeded

  - ${{ if or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual')) }}:
    - stage: CronNotifier_Fail
      condition: failed()
      dependsOn:
        - SecondPhaseTestsAllowedFail
        - SecondPhaseTests
        - CronTests
        - Release
      jobs:
      - job: notify
        pool:
          vmImage: ubuntu-20.04
        steps:
        - bash: |
            sudo apt-get install httpie xonsh
            http --version
        - bash: xonsh ./tools/send_matrix_message.xsh
          env:
            ROOMID: '%21JYqfIVJjWANcHnfktY:cadair.com'  # sunpy development room
            HOMESERVER: 'https://matrix.cadair.com'
            BRANCH: $(Build.SourceBranchName)
            ACCESS_TOKEN: $(azurebot_access_token)
            BUILDID: $(Build.BuildId)
            STATUS: Failed
